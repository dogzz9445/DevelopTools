<UserControl x:Class="DDT.Apps.DDTOrganizer.Views.DashboardView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:DDT.Apps.DDTOrganizer.Views"
             xmlns:viewmodels="clr-namespace:DDT.Apps.DDTOrganizer.ViewModels"
             xmlns:converters="clr-namespace:DDT.Core.WidgetSystems.Converters;assembly=DDT.Core.WidgetSystems"
             xmlns:dashboardControl="clr-namespace:DDT.Core.WidgetSystems.Controls;assembly=DDT.Core.WidgetSystems"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/DDT.Core.WidgetSystems;component/Themes/Generic.xaml" />
                <ResourceDictionary Source="pack://application:,,,/DDT.Core.WidgetSystems.DefaultWidgets;component/Widgets/DataTemplates.xaml" />
                <ResourceDictionary Source="pack://application:,,,/DDT.Core.WidgetSystems;component/Styles/CustomStyles.xaml" />

                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/VS/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/VS/Colors.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <BooleanToVisibilityConverter x:Key="BoolToVis" />
            <converters:InvertBoolToVisibilityConverter x:Key="InvertBoolToVis" />
            <converters:DashboardSelectorIsCheckedConverter x:Key="DashboardSelectorIsCheckedConverter" />
            <converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />
            <converters:InvertNullToVisibilityConverter x:Key="InvertNullToVisibilityConverter" />

        </ResourceDictionary>

    </UserControl.Resources>

    <Grid>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <!--  Dashboard Menu Bar  -->
            <Grid Grid.Row="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto"
                                   MinHeight="56" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <!--  Separator  -->
                <Border Grid.Row="0"
                        Height="1"
                        Background="LightGray" />

                <!--  Menu Items  -->
                <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <!--  Popup for Dashboard Selector  -->
                    <Popup x:Name="DashboardSelectorPopup"
                           AllowsTransparency="True"
                           IsOpen="{Binding IsChecked, ElementName=DashboardSelectorToggleButton}"
                           Placement="Bottom"
                           PlacementTarget="{Binding ElementName=DashboardSelectorToggleButton}">
                        <Border MinWidth="300"
                                Margin="3,0,3,3"
                                Background="White"
                                BorderBrush="LightGray"
                                BorderThickness="1"
                                CornerRadius="0,0,2,2">
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="3"
                                                  Direction="-50"
                                                  Opacity="0.3"
                                                  ShadowDepth="1"
                                                  Color="Black" />
                            </Border.Effect>

                            <StackPanel Margin="1">
                                <TextBlock Margin="5,5,0,7"
                                           FontSize="13"
                                           Foreground="DodgerBlue"
                                           Text="Dashboards" />

                                <ListBox BorderThickness="0"
                                         DisplayMemberPath="Title"
                                         ItemsSource="{Binding Dashboards}"
                                         SelectedItem="{Binding SelectedDashboard}" />

                                <Border Height="1"
                                        Background="LightGray" />

                                <Button Command="{Binding CommandNewDashboard}">
                                    <StackPanel Margin="5,5,5,5"
                                                Orientation="Horizontal">
                                        <Path Width="13"
                                              Height="13"
                                              Data="M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z"
                                              Stretch="Uniform"
                                              Style="{StaticResource MenuButtonPath}" />
                                        <TextBlock Margin="8,0,0,0"
                                                   Text="New dashboard" />
                                    </StackPanel>
                                </Button>
                            </StackPanel>
                        </Border>
                    </Popup>

                    <!--  Dashboard Selector  -->
                    <ToggleButton x:Name="DashboardSelectorToggleButton"
                                  Grid.Column="0"
                                  MinWidth="150"
                                  MaxWidth="200"
                                  Margin="5,5,0,5"
                                  FocusVisualStyle="{x:Null}"
                                  Focusable="False"
                                  Style="{DynamicResource DashboardSelectorToggle}" />

                    <!--  Configure Dashboard Button  -->
                    <ToggleButton Grid.Column="1"
                                  Margin="0,0,10,0"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Width="40"
                                  Height="40"
                                  FocusVisualStyle="{x:Null}"
                                  Command="{Binding CommandManageDashboard}"
                                  Style="{StaticResource MaterialDesignFlatToggleButton}"
                                  ToolTip="Manage dashboard">
                        <materialDesign:PackIcon Kind="Settings"
                                                 Foreground="{DynamicResource PrimaryHueMidForegroundBrush}"
                                                 Background="#00000000"
                                                 Width="24"
                                                 Height="24" />
                    </ToggleButton>
                    
                    <!--  Separator  -->
                    <Border Grid.Column="2"
                            Width="1"
                            Height="20"
                            Margin="10,0,0,0"
                            Background="DarkGray" />

                    <!--  Edit Button (Not Editing)  -->
                    <ToggleButton Grid.Column="3"
                                Margin="10,4,4,4"
                                Width="40"
                                  Height="40"
                                  FocusVisualStyle="{x:Null}"
                                  Command="{Binding ToggleEditDashboardCommand}"
                                  Style="{StaticResource MaterialDesignFlatToggleButton}"
                                  ToolTip="Edit the dashboard">
                        <materialDesign:PackIcon Kind="PuzzleEdit"
                                                 Foreground="{DynamicResource PrimaryHueMidForegroundBrush}"
                                                 Background="#00000000"
                                                 Width="24"
                                                 Height="24"/>
                    </ToggleButton>
                    
                    <!-- Tool bar (Editing) -->
                    <ToolBarTray Grid.Column="4"
                                 Margin="10,0,0,0"
                                 Visibility="{Binding EditMode, Converter={StaticResource BoolToVis}}">
                        <ToolBar ClipToBounds="False"
                                 Style="{StaticResource MaterialDesignToolBar}">
                            <Menu ItemsSource="{Binding AddWidgetMenuItemViewModels}">
                                <Menu.ItemContainerStyle>
                                    <Style TargetType="{x:Type MenuItem}"
                                           BasedOn="{StaticResource MaterialDesignMenuItem}">
                                        <Setter Property="Command"
                                                Value="{Binding Command}" />
                                        <Setter Property="Margin"
                                                Value="0 4 0 0" />
                                    </Style>
                                </Menu.ItemContainerStyle>
                                <Menu.ItemTemplate>
                                    <HierarchicalDataTemplate DataType="{x:Type viewmodels:MenuItemViewModel}"
                                                              ItemsSource="{Binding Path=MenuItems}">
                                        <TextBlock Text="{Binding Header}" />
                                    </HierarchicalDataTemplate>
                                </Menu.ItemTemplate>
                            </Menu>

                            <Menu >
                                <Menu.ItemContainerStyle>
                                    <Style TargetType="{x:Type MenuItem}"
                                           BasedOn="{StaticResource MaterialDesignMenuItem}">
                                        <Setter Property="Command"
                                                Value="{Binding Command}" />
                                        <Setter Property="Margin"
                                                Value="0 4 0 0" />
                                    </Style>
                                </Menu.ItemContainerStyle>
                                <MenuItem Header="Paste Widget" />
                            </Menu>

                            <Separator />

                            <Menu>
                                <Menu.ItemContainerStyle>
                                    <Style TargetType="{x:Type MenuItem}"
                                           BasedOn="{StaticResource MaterialDesignMenuItem}">
                                        <Setter Property="Command"
                                                Value="{Binding Command}" />
                                        <Setter Property="Margin"
                                                Value="0 4 0 0" />
                                    </Style>
                                </Menu.ItemContainerStyle>
                                <MenuItem Header="Manage Packages" />
                            </Menu>

                            <!--
                              when badging in a toolbar, make sure the parent ToolBar.ClipToBounds="False", and
                              manually apply the button style
                            -->
                            <Button Content="{materialDesign:PackIcon Kind=Hotel}"
                                    ToolBar.OverflowMode="Always"
                                    ToolTip="Take a nap" />
                            <RadioButton Content="Radio"
                                         GroupName="XXX" />
                            <RadioButton Content="Ga Ga"
                                         GroupName="XXX" />
                            <Separator />
                            <RadioButton Content="{materialDesign:PackIcon Kind=Radio}"
                                         GroupName="YYY"
                                         Style="{StaticResource MaterialDesignToolRadioButton}" />
                            <RadioButton Content="{materialDesign:PackIcon Kind=EmoticonPoop}"
                                         GroupName="YYY"
                                         Style="{StaticResource MaterialDesignToolRadioButton}" />
                            <Separator />
                            <ToggleButton />
                        </ToolBar>
                    </ToolBarTray>
                    
                </Grid>

                <!--  Separator  -->
                <Border Grid.Row="2"
                        Height="1"
                        Margin="5,0,5,0"
                        Background="LightGray" />
            </Grid>

            <!--  Dashboard Contents  -->
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <TabControl HorizontalContentAlignment="Left"
                            Style="{StaticResource MaterialDesignUniformTabControl}">
                    <TabItem Header="Workflow">
                        <dashboardControl:DashboardHost Grid.Column="0"
                                                        Margin="5"
                                                        EditMode="{Binding EditMode}"
                                                        ItemsSource="{Binding SelectedDashboard.Widgets}" />
                    </TabItem>
                    
                </TabControl>


                <!--  Configuring Widget Overlay  -->

                <!--  Add/Configure Widget Side Menu  -->
                <!--<Border Grid.Column="1"
                        MinWidth="375"
                        MaxWidth="375"
                        BorderBrush="Gray"
                        BorderThickness="1,0,0,0"
                        Visibility="{Binding EditMode, Converter={StaticResource BoolToVis}}">
                    <Grid>
                        --><!--  Add Widget Menu  --><!--
                        <Grid Visibility="{Binding ConfiguringWidget, Converter={StaticResource InvertNullToVisibilityConverter}}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <TextBlock Grid.Row="0"
                                       Margin="10"
                                       FontSize="17"
                                       Foreground="Black"
                                       Text="Add Widget" />

                            <ListBox Grid.Row="1"
                                     Margin="0,5,0,0"
                                     Padding="0"
                                     BorderBrush="LightGray"
                                     BorderThickness="0,1,0,1"
                                     ItemContainerStyle="{StaticResource ListBoxItemNoSelect}"
                                     ItemsSource="{Binding AvailableWidgets}"
                                     ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                     ScrollViewer.VerticalScrollBarVisibility="Auto">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <Border BorderBrush="Gray"
                                                BorderThickness="0,0,0,1">
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                </Grid.RowDefinitions>
                                                <TextBlock Grid.Row="0"
                                                           Margin="10"
                                                           FontSize="14"
                                                           FontWeight="Bold"
                                                           Foreground="DodgerBlue"
                                                           Text="{Binding Name}"
                                                           TextWrapping="Wrap" />

                                                <TextBlock Grid.Row="1"
                                                           Margin="10,0,0,0"
                                                           FontSize="13"
                                                           Text="{Binding Description}"
                                                           TextWrapping="Wrap" />

                                                <Button x:Name="AddWidgetButton"
                                                        Grid.Row="2"
                                                        Margin="0,5,10,10"
                                                        HorizontalAlignment="Right"
                                                        Command="{Binding DataContext.CommandAddWidget, RelativeSource={RelativeSource AncestorType={x:Type UserControl}, Mode=FindAncestor}}"
                                                        CommandParameter="{Binding}">
                                                    <Button.Style>
                                                        <Style BasedOn="{StaticResource ButtonNoStyle}"
                                                               TargetType="{x:Type Button}">
                                                            <Setter Property="Visibility"
                                                                    Value="Hidden" />
                                                            <Setter Property="Background"
                                                                    Value="DodgerBlue" />
                                                            <Style.Triggers>
                                                                <Trigger Property="IsMouseOver"
                                                                         Value="True">
                                                                    <Setter Property="Background"
                                                                            Value="Blue" />
                                                                </Trigger>
                                                                <Trigger Property="IsPressed"
                                                                         Value="True">
                                                                    <Setter Property="Background"
                                                                            Value="DeepSkyBlue" />
                                                                </Trigger>
                                                                <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}, Mode=FindAncestor}}"
                                                                             Value="True">
                                                                    <Setter Property="Visibility"
                                                                            Value="Visible" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Button.Style>
                                                    <TextBlock Margin="20,3"
                                                               Foreground="White"
                                                               Text="Add" />
                                                </Button>
                                            </Grid>
                                        </Border>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </Grid>

                        --><!--  Configure Widget  --><!--
                        <Grid Visibility="{Binding ConfiguringWidget, Converter={StaticResource NullToVisibilityConverter}}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <StackPanel Grid.Row="0">
                                <TextBlock Margin="10"
                                           FontSize="17"
                                           Foreground="Black"
                                           Text="Configuration" />

                                <Border Height="1"
                                        Background="LightGray" />
                            </StackPanel>

                            <StackPanel Grid.Row="1"
                                        Margin="5">
                                <TextBlock FontWeight="Bold"
                                           Text="Widget Title" />

                                <TextBox Margin="0,5,0,0"
                                         VerticalAlignment="Top"
                                         Tag="Widget Title"
                                         Text="{Binding ConfiguringWidget.DataContext.WidgetTitle, UpdateSourceTrigger=PropertyChanged}" />
                            </StackPanel>

                            <StackPanel Grid.Row="2"
                                        HorizontalAlignment="Right"
                                        Orientation="Horizontal">
                                <Button Margin="5"
                                        Command="{Binding CommandDoneConfiguringWidget}">
                                    <Button.Style>
                                        <Style BasedOn="{StaticResource ButtonNoStyle}"
                                               TargetType="{x:Type Button}">
                                            <Setter Property="Background"
                                                    Value="DodgerBlue" />
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver"
                                                         Value="True">
                                                    <Setter Property="Background"
                                                            Value="Blue" />
                                                </Trigger>
                                                <Trigger Property="IsPressed"
                                                         Value="True">
                                                    <Setter Property="Background"
                                                            Value="DeepSkyBlue" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                    <TextBlock Margin="20,5,20,5"
                                               Foreground="White"
                                               Text="Save" />
                                </Button>
                                <Button Margin="5"
                                        Command="{Binding CommandDoneConfiguringWidget}">
                                    <Button.Style>
                                        <Style BasedOn="{StaticResource ButtonNoStyle}"
                                               TargetType="{x:Type Button}">
                                            <Setter Property="Background"
                                                    Value="DodgerBlue" />
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver"
                                                         Value="True">
                                                    <Setter Property="Background"
                                                            Value="Blue" />
                                                </Trigger>
                                                <Trigger Property="IsPressed"
                                                         Value="True">
                                                    <Setter Property="Background"
                                                            Value="DeepSkyBlue" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>

                                    <TextBlock Margin="15,5,15,5"
                                               Foreground="White"
                                               Text="Cancel" />
                                </Button>
                            </StackPanel>
                        </Grid>
                    </Grid>
                </Border>-->
            </Grid>
        </Grid>

        <!--  Dashboard Configuration  -->
        <!--<Grid Visibility="{Binding ConfiguringDashboard, Converter={StaticResource NullToVisibilityConverter}}">
        <Border Background="Black"
                Opacity="0.3" />

        <UserControl HorizontalAlignment="Center"
                     VerticalAlignment="Center"
                     Content="{Binding ConfiguringDashboard}" />
    </Grid>-->
    </Grid>
</UserControl>
